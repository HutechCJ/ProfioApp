version: '2'
services:
  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib-dev:latest
    container_name: opentelemetry-collector
    restart: always
    command: ['--config=/etc/otel-collector-config.yaml']
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - '8888:8888' # Prometheus metrics exposed by the collector
      - '8889:8889' # Prometheus exporter metrics
      - '13133:13133' # health_check extension
      - '4317:4317' # OTLP gRPC receiver
      - '55679:55679' # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
    networks:
      - profio-bridge

  # Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - '3000:3000'
    networks:
      - profio-bridge

  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    container_name: zipkin-all-in-one
    ports:
      - '9411:9411'
    networks:
      - profio-bridge

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger-all-in-one
    restart: always
    ports:
      - '16686:16686'
      - '14268'
      - '14250'
    networks:
      - profio-bridge

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    environment:
      - TZ=Asia/Ho_Chi_Minh
    ports:
      - '9090:9090'
    networks:
      - profio-bridge

  # seq
  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: on-failure
    ports:
      - '5341:80'
    environment:
      - ACCEPT_EULA=Y
    networks:
      - profio-bridge

  # portainer
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - 9443:9443
    volumes:
      - data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - profio-bridge

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=info@hutech.edu.vn
      - PGADMIN_DEFAULT_PASSWORD=Hutech@123
    ports:
      - '5050:80'
    networks:
      - profio-bridge

  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.3
    container_name: keycloak
    command: ['start-dev --import-realm']
    restart: always
    environment:
      JAVA_OPTS_APPEND: -Dkeycloak.profile.feature.upload_scripts=enabled
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_PROXY: passthrough
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://dpg-cjl2klfv9s6c73arft2g-a.singapore-postgres.render.com:5432/profio
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: fGw6Zlku4UIm9cWyZg3loncQUd30MCbC
      KC_DB_SCHEMA: autenticacion
    ports:
      - '8090:8080'
    networks:
      - profio-bridge

networks:
  profio-bridge:
    driver: bridge

volumes:
  data:
